<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>si.zitnik.optibuk</groupId>
   <artifactId>optibuk.si</artifactId>
   <version>1.0-SNAPSHOT</version>
   <packaging>war</packaging>
   <name>Optibuk.si</name>
   <description>Optibuk.si project</description>

   <properties>
       <org.springframework.version>3.1.2.RELEASE</org.springframework.version>
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

       <spring.data.jpa.version>1.1.0.M1</spring.data.jpa.version>

       <cglib.version>2.2</cglib.version>
       <aspectj.version>1.6.10</aspectj.version>

       <hibernate.entitymanager.version>4.0.1.Final</hibernate.entitymanager.version>
       <hibernate.jpa-api.version>2.0-cr-1</hibernate.jpa-api.version>
       <c3p0.version>0.9.1.2</c3p0.version>

       <querydsl.version>2.2.5</querydsl.version>
       <slf4j.version>1.6.1</slf4j.version>
       <log4j.version>1.2.14</log4j.version>

       <javax.servlet-api.version>2.5</javax.servlet-api.version>
       <javax.jstl-taglibs.version>1.1.2</javax.jstl-taglibs.version>

       <!-- Testing -->
       <mockito.version>1.8.5</mockito.version>
       <junit.version>4.8.2</junit.version>

       <!-- Plugins -->
       <maven.copy.plugin.version>0.2.3</maven.copy.plugin.version>
       <maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
       <maven.apt.plugin.version>1.0</maven.apt.plugin.version>

       <jboss.as.version>7.1.1.Final</jboss.as.version>
       <spring.social.fb>1.1.0.BUILD-SNAPSHOT</spring.social.fb>
       <spring.social.version>1.1.0.BUILD-SNAPSHOT</spring.social.version>
   </properties>

   <dependencies>
       <!-- SPRING -->
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-core</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-expression</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-beans</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-aop</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-context</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-context-support</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-tx</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-jdbc</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-orm</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-oxm</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-web</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-webmvc</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-webmvc-portlet</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-test</artifactId>
           <version>${org.springframework.version}</version>
           <scope>test</scope>
       </dependency>

       <!-- Spring Data JPA -->
       <dependency>
           <groupId>org.springframework.data</groupId>
           <artifactId>spring-data-jpa</artifactId>
           <version>${spring.data.jpa.version}</version>
       </dependency>

       <!-- Database pooling -->
       <dependency>
           <groupId>c3p0</groupId>
           <artifactId>c3p0</artifactId>
           <version>${c3p0.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>

       <!-- Hibernate c3p0 connection pool -->
       <!--<dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-c3p0</artifactId>
           <version>4.2.1.Final</version>
       </dependency>    -->

       <!-- Hibernate and JPA -->
       <dependency>
           <groupId>org.hibernate.java-persistence</groupId>
           <artifactId>jpa-api</artifactId>
           <version>${hibernate.jpa-api.version}</version>
           <scope>compile</scope>
       </dependency>
       <dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-entitymanager</artifactId>
           <version>${hibernate.entitymanager.version}</version>
           <scope>compile</scope>
       </dependency>

       <!-- JSR 303 with Hibernate Validator -->
       <dependency>
           <groupId>javax.validation</groupId>
           <artifactId>validation-api</artifactId>
           <version>1.0.0.GA</version>
       </dependency>
       <dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-validator</artifactId>
           <version>4.3.1.Final</version>
       </dependency>

       <!-- QueryDSL -->
       <dependency>
           <groupId>com.mysema.querydsl</groupId>
           <artifactId>querydsl-core</artifactId>
           <version>${querydsl.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>
       <dependency>
           <groupId>com.mysema.querydsl</groupId>
           <artifactId>querydsl-jpa</artifactId>
           <version>${querydsl.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>
       <dependency>
           <groupId>com.mysema.querydsl</groupId>
           <artifactId>querydsl-apt</artifactId>
           <version>${querydsl.version}</version>
           <scope>provided</scope>
       </dependency>

       <!-- SPRING SECURITY -->
       <dependency>
           <groupId>org.springframework.security</groupId>
           <artifactId>spring-security-core</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework.security</groupId>
           <artifactId>spring-security-web</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework.security</groupId>
           <artifactId>spring-security-config</artifactId>
           <version>${org.springframework.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework.security</groupId>
           <artifactId>spring-security-taglibs</artifactId>
           <version>${org.springframework.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>

       <!-- SPRING SOCIAL -->
       <dependency>
           <groupId>org.springframework.social</groupId>
           <artifactId>spring-social-core</artifactId>
           <version>${spring.social.version}</version>
       </dependency>

       <dependency>
           <groupId>org.springframework.social</groupId>
           <artifactId>spring-social-web</artifactId>
           <version>${spring.social.version}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework.social</groupId>
           <artifactId>spring-social-facebook</artifactId>
           <version>${spring.social.fb}</version>
       </dependency>
       <dependency>
           <groupId>org.springframework.social</groupId>
           <artifactId>spring-social-facebook-web</artifactId>
           <version>${spring.social.fb}</version>
       </dependency>

       <!-- Guava -->
       <dependency>
           <groupId>com.google.guava</groupId>
           <artifactId>guava</artifactId>
           <version>r09</version>
       </dependency>



       <!-- JAVA Servlet -->
       <dependency>
           <groupId>javax.servlet</groupId>
           <artifactId>servlet-api</artifactId>
           <version>2.5</version>
           <scope>provided</scope>
       </dependency>

       <!-- Cglib is a powerful, high performance and quality Code Generation Library,
   It is used to extend JAVA classes and implements interfaces at runtime.  -->
       <dependency>
           <groupId>cglib</groupId>
           <artifactId>cglib-nodep</artifactId>
           <version>${cglib.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>

       <!-- The JavaServer Pages Standard Tag Library (JSTL) encapsulates, as simple tags, core
       functionality common to many JSP applications. -->
       <dependency>
           <groupId>javax.servlet</groupId>
           <artifactId>jstl</artifactId>
           <version>${javax.jstl-taglibs.version}</version>
       </dependency>
       <dependency>
           <groupId>taglibs</groupId>
           <artifactId>standard</artifactId>
           <version>${javax.jstl-taglibs.version}</version>
       </dependency>


       <dependency>
           <groupId>asm</groupId>
           <artifactId>asm</artifactId>
           <version>3.3.1</version>
       </dependency>
       <dependency>
           <groupId>com.fasterxml.jackson.core</groupId>
           <artifactId>jackson-core</artifactId>
           <version>2.1.2</version>
       </dependency>
       <dependency>
           <groupId>org.codehaus.jackson</groupId>
           <artifactId>jackson-mapper-asl</artifactId>
           <version>1.9.9</version>
       </dependency>

       <!-- A seamless aspect-oriented extension to the Java programming language -->
       <dependency>
           <groupId>org.aspectj</groupId>
           <artifactId>aspectjrt</artifactId>
           <version>${aspectj.version}</version>
       </dependency>

       <dependency>
           <groupId>org.aspectj</groupId>
           <artifactId>aspectjweaver</artifactId>
           <version>${aspectj.version}</version>
       </dependency>


       <!-- Logger -->
       <dependency>
           <groupId>log4j</groupId>
           <artifactId>log4j</artifactId>
           <version>${log4j.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>

       <!-- The Simple Logging Facade for Java or (SLF4J) serves as a simple facade or abstraction
       for various logging frameworks, e.g. java.util.logging, log4j and logback, allowing the end
       user to plug in the desired logging framework at deployment time. -->
       <dependency>
           <groupId>org.slf4j</groupId>
           <artifactId>slf4j-api</artifactId>
           <version>${slf4j.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>
       <dependency>
           <groupId>org.slf4j</groupId>
           <artifactId>slf4j-log4j12</artifactId>
           <version>${slf4j.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>
       <dependency>
           <groupId>org.slf4j</groupId>
           <artifactId>jcl-over-slf4j</artifactId>
           <version>${slf4j.version}</version>
           <type>jar</type>
           <scope>compile</scope>
       </dependency>



       <dependency>
           <groupId>org.hibernate.javax.persistence</groupId>
           <artifactId>hibernate-jpa-2.0-api</artifactId>
           <version>1.0.1.Final</version>
       </dependency>
       <dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-core</artifactId>
           <version>4.0.1.Final</version>
       </dependency>


       <dependency>
           <groupId>commons-logging</groupId>
           <artifactId>commons-logging</artifactId>
           <version>1.1.1</version>
       </dependency>
       <dependency>
           <groupId>mysql</groupId>
           <artifactId>mysql-connector-java</artifactId>
           <version>5.1.22</version>
       </dependency>
       <dependency>
           <groupId>aopalliance</groupId>
           <artifactId>aopalliance</artifactId>
           <version>1.0</version>
       </dependency>


       <dependency>
           <groupId>commons-io</groupId>
           <artifactId>commons-io</artifactId>
           <version>2.4</version>
       </dependency>
       <dependency>
           <groupId>commons-fileupload</groupId>
           <artifactId>commons-fileupload</artifactId>
           <version>1.3</version>
       </dependency>


       <dependency>
           <groupId>com.h2database</groupId>
           <artifactId>h2</artifactId>
           <version>1.3.159</version>
       </dependency>

       <dependency>
           <groupId>org.json</groupId>
           <artifactId>json</artifactId>
           <version>20090211</version>
       </dependency>




   </dependencies>

   <build>
      <!-- Maven will append the version to the finalName (which is the name 
         given to the generated war, and hence the context root) -->
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
            annotation processors -->
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven.compiler.plugin.version}</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
               <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>

          <plugin>
              <groupId>com.mysema.maven</groupId>
              <artifactId>maven-apt-plugin</artifactId>
              <version>${maven.apt.plugin.version}</version>
              <executions>
                  <execution>
                      <goals>
                          <goal>process</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>target/generated-sources/java</outputDirectory>
                          <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
                      </configuration>
                  </execution>
              </executions>
          </plugin>

          <!--
              The Resources Plugin handles the copying of project resources to the output directory.
              @see http://maven.apache.org/plugins/maven-resources-plugin/home.jsp
              -->
          <plugin>
              <artifactId>maven-resources-plugin</artifactId>
              <version>2.5</version>
              <executions>
                  <execution>
                      <id>copy-meta-inf</id>
                      <phase>compile</phase>
                      <goals>
                          <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
                          <resources>
                              <resource>
                                  <directory>${project.basedir}/src/main/resources/META-INF</directory>
                              </resource>
                          </resources>
                      </configuration>
                  </execution>
              </executions>
          </plugin>


      </plugins>
   </build>

    <repositories>
        <!-- For main Spring releases -->
        <repository>
            <id>org.springframework.maven.release</id>
            <name>Spring Maven Release Repository</name>
            <url>http://maven.springframework.org/release</url>
            <releases><enabled>true</enabled></releases>
            <snapshots><enabled>false</enabled></snapshots>
        </repository>

        <!-- For testing against latest Spring snapshots -->
        <repository>
            <id>org.springframework.maven.snapshot</id>
            <name>Spring Maven Snapshot Repository</name>
            <url>http://maven.springframework.org/snapshot</url>
            <releases><enabled>false</enabled></releases>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>

        <!-- For developing against latest Spring milestones -->
        <repository>
            <id>org.springframework.maven.milestone</id>
            <name>Spring Maven Milestone Repository</name>
            <url>http://maven.springframework.org/milestone</url>
            <snapshots><enabled>false</enabled></snapshots>
        </repository>
    </repositories>


    <profiles>
        <profile>
            <!-- The default profile skips all tests, though you can tune it
               to run just unit tests based on a custom pattern -->
            <!-- Seperate profiles are provided for running all tests, including
               Arquillian tests that execute in the specified container -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.4.3</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
